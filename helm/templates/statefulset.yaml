apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "prometheus-elector.fullname" . }}
  labels:
    {{- include "prometheus-elector.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  serviceName: {{ include "prometheus-elector.fullname" . }}
  selector:
    matchLabels:
      {{- include "prometheus-elector.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "prometheus-elector.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "prometheus-elector.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      initContainers:
        - name: generate-init-config
          image: {{ include "helm.imageName" . }}
          imagePullPolicy: {{ .Values.prometheus.image.pullPolicy }}
          args:
            - -config=/etc/config/prometheus-elector.yaml
            - -output=/etc/runtime/prometheus.yaml
            - -init
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          volumeMounts:
            - name: config-volume
              mountPath: /etc/config
              readOnly: true
            - name: runtime-volume
              mountPath: /etc/runtime
      containers:
        - name: prometheus-elector
          image: {{ include "helm.imageName" . }}
          imagePullPolicy: {{ .Values.elector.image.pullPolicy }}
          args:
            - -lease-name=prometheus-elector-lease
            - -lease-namespace={{ .Release.Namespace }}
            - -config=/etc/config/prometheus-elector.yaml
            - -output=/etc/runtime/prometheus.yaml
            - -notify-http-url=http://127.0.0.1:9090/-/reload
            - -readiness-http-url=http://127.0.0.1:9090/-/ready
            - -healthcheck-http-url=http://127.0.0.1:9090/-/healthy
            - -api-listen-address=:9095
            {{- if .Values.enableLeaderProxy }}
            - -api-proxy-enabled
            - -api-proxy-prometheus-service-name={{ include "prometheus-elector.fullname" . }}
            - -api-proxy-prometheus-local-port=9090
            - -api-proxy-prometheus-remote-port=9090
            {{- end }}
            {{- range $arg := .Values.elector.args }}
            - {{ $arg }}
            {{- end }}
          ports:
            - name: http-elector
              containerPort: 9095
              protocol: TCP
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
{{- if .Values.elector.readinessProbe }}
          readinessProbe:
{{ toYaml .Values.elector.readinessProbe | indent 12 }}
          {{- end }}
          {{- if .Values.elector.livenessProbe }}
          livenessProbe:
{{ toYaml .Values.elector.livenessProbe | indent 12 }}
          {{- end }}
          volumeMounts:
            - name: config-volume
              mountPath: /etc/config
              readOnly: true
            - name: runtime-volume
              mountPath: /etc/runtime
        - name: prometheus
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.prometheus.image.repository }}:{{ .Values.prometheus.image.tag }}"
          imagePullPolicy: {{ .Values.prometheus.image.pullPolicy }}
          {{- if .Values.prometheus.env }}
          env:
{{ toYaml .Values.prometheus.env | indent 12}}
          {{- end }}
          args:
            - --config.file=/etc/config/prometheus.yaml
            - --web.enable-lifecycle
            {{- range $arg := .Values.prometheus.args }}
            - {{ $arg }}
            {{- end }}
          ports:
            - name: http
              containerPort: 9090
              protocol: TCP
          {{- if .Values.prometheus.readinessProbe }}
          readinessProbe:
{{ toYaml .Values.prometheus.readinessProbe | indent 12 }}
          {{- end }}
          {{- if .Values.prometheus.livenessProbe }}
          livenessProbe:
{{ toYaml .Values.prometheus.livenessProbe | indent 12 }}
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: runtime-volume
              mountPath: /etc/config
              readOnly: true
            - name: storage-volume
              mountPath: /prometheus/data-agent
              subPath: ""
            - name: storage-volume
              mountPath: /prometheus/data
              subPath: ""
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        - name: config-volume
          configMap:
            name: {{ template "prometheus-elector.configMapName" . }}
        - name: runtime-volume
          emptyDir: {}
  volumeClaimTemplates:
    - metadata:
        name: storage-volume
        {{- if .Values.storage.annotations }}
        annotations:
{{ toYaml .Values.storage.annotations | indent 10 }}
        {{- end }}
        {{- if .Values.storage.labels }}
        labels:
{{ toYaml .Values.storage.labels | indent 10 }}
        {{- end }}
      spec:
        accessModes: [ "ReadWriteOnce" ]
        storageClassName: {{ .Values.storage.storageClassName | default "" }}
        resources:
          requests:
            storage: {{ .Values.storage.size | default "1Gi" }}
