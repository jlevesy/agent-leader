---
apiVersion: v1
kind: Namespace
metadata:
  name: agent
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: agent-sa
  namespace: agent
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: agent-config
  namespace: agent
data:
  prometheus-prometheus-elector.yaml: |
    # Configuration only applied when elected leader
    leader:
      remote_write:
        - url: http://storage.storage.svc.cluster.local:9090/api/v1/write
    # Configuration always applied
    follower:
      global:
        scrape_interval: 15s
      scrape_configs:
        - job_name: prometheus
          static_configs:
            - targets:
              - localhost:9090

        - job_name: 'kubernetes-nodes'
          scheme: https
          tls_config:
            ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
            insecure_skip_verify: true
          bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token

          kubernetes_sd_configs:
            - role: node

          relabel_configs:
            - action: labelmap
              regex: __meta_kubernetes_node_label_(.+)
            - target_label: __address__
              replacement: kubernetes.default.svc:443
            - source_labels: [__meta_kubernetes_node_name]
              regex: (.+)
              target_label: __metrics_path__
              replacement: /api/v1/nodes/$1/proxy/metrics
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: agent-clusterrole
rules:
  - apiGroups:
      - ""
    resources:
      - nodes
      - nodes/proxy
      - nodes/metrics
      - services
      - endpoints
      - pods
      - ingresses
      - configmaps
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - "extensions"
      - "networking.k8s.io"
    resources:
      - ingresses/status
      - ingresses
    verbs:
      - get
      - list
      - watch
  - nonResourceURLs:
      - "/metrics"
    verbs:
      - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: agent-crb
subjects:
  - kind: ServiceAccount
    name: agent-sa
    namespace: agent
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: agent-clusterrole
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: agent-role
  namespace: agent
rules:
  - apiGroups:
      - "coordination.k8s.io"
    resources:
      - leases
    verbs:
      - get
      - list
      - watch
      - create
      - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: agent-rolebinding
  namespace: agent
subjects:
  - kind: ServiceAccount
    name: agent-sa
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: agent-role
---
# Source: prometheus/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: agent
  namespace: agent
spec:
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: agent
---
# Source: prometheus/templates/deployment.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: agent
  namespace: agent
spec:
  replicas: 2
  serviceName: agent
  selector:
    matchLabels:
      app.kubernetes.io/name: agent
  template:
    metadata:
      labels:
        app.kubernetes.io/name: agent
    spec:
      serviceAccountName: agent-sa
      securityContext:
        fsGroup: 65534
        runAsGroup: 65534
        runAsNonRoot: true
        runAsUser: 65534
        seccompProfile:
          type: RuntimeDefault
      initContainers:
        - name: prometheus-prometheus-elector-init
          image: ko://github.com/jlevesy/prometheus-elector/cmd
          imagePullPolicy: IfNotPresent
          args:
            - -config=/etc/config/prometheus-prometheus-elector.yaml
            - -output=/etc/runtime/prometheus.yaml
            - -init
          securityContext:
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 1000
          volumeMounts:
            - name: config-volume
              mountPath: /etc/config
              readOnly: true
            - name: runtime-volume
              mountPath: /etc/runtime
      containers:
        - name: prometheus-prometheus-elector
          image: ko://github.com/jlevesy/prometheus-elector/cmd
          imagePullPolicy: IfNotPresent
          args:
            - -lease-name=prometheus-elector-lease
            - -lease-namespace=agent
            - -config=/etc/config/prometheus-prometheus-elector.yaml
            - -output=/etc/runtime/prometheus.yaml
            - -reload-url=http://127.0.0.1:9090/-/reload
          securityContext:
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 1000
          volumeMounts:
            - name: config-volume
              mountPath: /etc/config
              readOnly: true
            - name: runtime-volume
              mountPath: /etc/runtime
        - name: prometheus
          securityContext:
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 1000
          image: jlevesy/prometheus:allow-agent-no-remote-write
          imagePullPolicy: IfNotPresent
          args:
            - --enable-feature=agent
            - --config.file=/etc/config/prometheus.yaml
            - --web.enable-lifecycle
          env:
            - name: GOGC
              value: "50"
          ports:
            - name: http
              containerPort: 9090
              protocol: TCP
          readinessProbe:
            httpGet:
              path: /-/ready
              port: http
            initialDelaySeconds: 30
            periodSeconds: 5
            timeoutSeconds: 4
            failureThreshold: 3
            successThreshold: 1
          livenessProbe:
            httpGet:
              path: /-/healthy
              port: http
            initialDelaySeconds: 30
            periodSeconds: 15
            timeoutSeconds: 10
            failureThreshold: 3
            successThreshold: 1
          resources:
            {}
          volumeMounts:
            - name: runtime-volume
              mountPath: /etc/config
              readOnly: true
            - name: storage-volume
              mountPath: /prometheus/data-agent
              subPath: ""
      volumes:
        - name: config-volume
          configMap:
            name: agent-config
        - name: runtime-volume
          emptyDir: {}
        - name: storage-volume
          emptyDir: {}
